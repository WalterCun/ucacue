# Configuración específica para Docker con SQLite
# Este archivo se usa cuando se ejecuta en contenedores Docker

# Configuración de la base de datos SQLite
quarkus.datasource.db-kind=sqlite
# Ruta por defecto dentro del contenedor; se puede sobrescribir con env DB_NAME
quarkus.datasource.jdbc.url=jdbc:sqlite:${DB_NAME:/deployments/data/ucacue.db}
quarkus.hibernate-orm.dialect=org.hibernate.community.dialect.SQLiteDialect

# Configuración de Hibernate ORM
quarkus.hibernate-orm.database.generation=${QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION:update}
quarkus.hibernate-orm.log.sql=${QUARKUS_HIBERNATE_ORM_LOG_SQL:true}
quarkus.hibernate-orm.sql-load-script=${QUARKUS_HIBERNATE_ORM_SQL_LOAD_SCRIPT:import.sql}

# Configuración de conexión a la base de datos (no todas aplican a SQLite)
quarkus.datasource.db.max-size=20
quarkus.datasource.db.min-size=5
quarkus.datasource.db.initial-size=5
quarkus.datasource.db.leak-detection-interval=60s

# Configuración de migración de base de datos
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.baseline-version=0.0.1
quarkus.flyway.sql-migration-prefix=V
quarkus.flyway.sql-migration-separator=__
quarkus.flyway.sql-migration-suffixes=.sql
# Intentar reparar checksums automáticamente al iniciar
quarkus.flyway.repair-at-start=true
# En el perfil docker permitimos limpiar si hay incompatibilidades de esquema para evitar bloqueos de arranque
quarkus.flyway.clean-on-validation-error=true
quarkus.flyway.clean-disabled=false

# Configuración de logging
quarkus.log.level=INFO
quarkus.log.category."org.hibernate.SQL".level=DEBUG
quarkus.log.category."org.hibernate.type.descriptor.sql.BasicBinder".level=TRACE

# Health checks
quarkus.smallrye-health.root-path=/health
quarkus.smallrye-health.liveness-path=/health/live
quarkus.smallrye-health.readiness-path=/health/ready
