---
export interface Props {
    title?: string;
    links?: Array<{
        name: string;
        href: string;
    }>;
}

const {
    title = "UCACUE",
    links = [
        {name: "Inscripción", href: "/inscripcion"},
        {name: "Revisión", href: "/revision"}
    ]
} = Astro.props;
---

<nav class=" top-0 w-full bg-white/90 backdrop-blur-md border-b border-gray-200 z-50 transition-all duration-300 pr-3">
    <div class="container-custom">
        <div class="flex items-center justify-between h-16">
            <!-- Logo -->
            <div class="flex items-center">
                <a href="/" class="text-2xl font-bold text-primary-600 hover:text-primary-700 transition-colors">
                    {title}
                </a>
            </div>

            <!-- Desktop Navigation -->
            <div class="hidden md:flex items-center space-x-8">
                {links.map((link) => (
                        <a
                                href={link.href}
                                class="text-gray-700 hover:text-primary-600 font-medium transition-colors duration-200 relative group"
                        >
                            {link.name}
                            <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-primary-600 transition-all duration-300 group-hover:w-full"></span>
                        </a>
                ))}
            </div>

            <div>

            </div>

            <!-- Mobile menu button -->
            <div class="md:hidden">
                <button
                        id="mobile-menu-button"
                        class="text-gray-700 hover:text-primary-600 focus:outline-none focus:text-primary-600"
                        aria-label="Toggle mobile menu"
                >
                    <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M4 6h16M4 12h16M4 18h16"/>
                    </svg>
                </button>
            </div>
        </div>

        <!-- Mobile Navigation -->
        <div id="mobile-menu" class="md:hidden hidden">
            <div class="px-2 pt-2 pb-3 space-y-1 bg-white border-t border-gray-200">
                {links.map((link) => (
                        <a
                                href={link.href}
                                class="block px-3 py-2 text-base font-medium text-gray-700 hover:text-primary-600 hover:bg-gray-50 rounded-md transition-colors"
                        >
                            {link.name}
                        </a>
                ))}
                <div class="pt-4">
                    <a href="/inscripcion" class="btn-primary w-full text-center block">
                        Ir a Inscripción
                    </a>
                </div>
            </div>
        </div>
    </div>
</nav>

<script>
    // Mobile menu toggle
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');

    if (mobileMenuButton && mobileMenu) {
        mobileMenuButton.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
        });

        // Close mobile menu when clicking on a link
        const mobileLinks = mobileMenu.querySelectorAll('a');
        mobileLinks.forEach(link => {
            link.addEventListener('click', () => {
                mobileMenu.classList.add('hidden');
            });
        });
    }

    // Navbar background on scroll
    window.addEventListener('scroll', () => {
        const nav = document.querySelector('nav');
        if (nav) {
            if (window.scrollY > 10) {
                nav.classList.add('bg-white/95', 'shadow-lg');
            } else {
                nav.classList.remove('bg-white/95', 'shadow-lg');
            }
        }
    });
</script>
